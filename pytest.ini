[tool:pytest]
# Pytest configuration for reliable GPU backend tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for backend switching and fallback
    performance: Performance benchmarking tests
    mock: Mock tests for various hardware configurations
    slow: Tests that take a long time to run
    gpu_required: Tests that require actual GPU hardware
    
# Output configuration
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    -ra
    
# Minimum version
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Coverage configuration
[coverage:run]
source = app/core, app/backends
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
precision = 2

[coverage:html]
directory = htmlcov